  > load models/Negotiate.xml
  > load models/Negotiation.xml
  > eval relation = RI.SUBMISSIVE
    # Returned '-1'
  > eval $negotiation.printPrefs()
Restaurant :
 (class fr.limsi.negotiate.restaurant.Cost<class fr.limsi.negotiate.restaurant.Cuisine)
(class fr.limsi.negotiate.restaurant.Ambiance<class fr.limsi.negotiate.restaurant.Cost)

Cost: 
(EXPENSIVE<CHEAP)

Cuisine: 
(FRENCH<CHINESE)
(JAPANESE<CHINESE)
(ITALIAN<JAPANESE)
(ITALIAN<FRENCH)
(TURKISH<JAPANESE)

Ambiance: 
(NOISY<CALM)

    # Returned 'null'
  > task Trees
    User says "Let's achieve Trees."
    Agent says "What kind of Cuisine do you like?"
  > execute fr.limsi.negotiate.lang.StatePreference/ null /$cuisine.TURKISH
    User says "TURKISH is my favorite Cuisine."
    Agent says "I prefer CHINESE over TURKISH."
  > execute fr.limsi.negotiate.lang.StatePreference/$cuisine.CHINESE/ $cuisine.TURKISH
    User says "I prefer TURKISH over CHINESE."
    Agent says "CHINESE is my favorite Cuisine."
  > execute fr.limsi.negotiate.lang.StatePreference/$cuisine.CHINESE/$cuisine.JAPANESE
    User says "I prefer JAPANESE over CHINESE."
    Agent says "I propose that we choose JAPANESE Cuisine."
  > execute fr.limsi.negotiate.lang.Accept/createProposal($cuisine.JAPANESE)
    User says "Okay, let's choose JAPANESE."
    Agent says "For Cost, do you prefer CHEAP or EXPENSIVE?"
  > execute fr.limsi.negotiate.lang.StatePreference/$cost.EXPENSIVE/ $cost.CHEAP
    User says "I prefer CHEAP over EXPENSIVE."