<?xml version="1.0" encoding="utf-8"?>
<model about="urn:negotiate.limsi.fr:Example"
       xmlns="http://www.cs.wpi.edu/~rich/d4g"
       xmlns:disco="urn:disco.wpi.edu:Disco"
       xmlns:n="urn:negotiate.limsi.fr:Negotiate"
       xmlns:t="http://www.cs.wpi.edu/~rich/cetask/cea-2018-ext">



<agent id="Invitation" text="Would you like to go out with me on the town tonight?">
	<user text="That would be great ! .">
		<do id="statePreference"/>
		
 	</user>
 	<user text="No. I have plans for tonight">
		<do task="CloseDialogue"/>
  	</user>
</agent>


<agent id="CloseDialogue" text="No problem, another day maybe">
  <user text="Sure !."/>
  <user text="yeah, I'll call you tommorow."/>
</agent> 

  
<do id="statePreference" actor="user" task="n:fr.limsi.negotiate.lang.StatePreference">
	<!-- State its preferences on the same values applicable only if the agent previous utterance is not about this preference-->
    <do actor="agent" task="n:fr.limsi.negotiate.lang.StatePreference"
    	less="getLastUserStatement().getLess()" more="getLastUserStatement().getMore()"/>
   
   <!-- State its preferences on different values -->
   <do actor="agent" task="n:fr.limsi.negotiate.lang.StatePreference" 
       	less="getLastUserStatement().getLess()" more="getLastUserStatement().getMore()"/>
     
          
   <!-- Propose the stated preference get more and propose it -->
    <do actor="agent" task="n:fr.limsi.negotiate.lang.Propose"
          proposal=""/> 

   <!-- State its preferences on different values -->
   <do actor="agent" task="n:fr.limsi.negotiate.lang.AskPreference"/>	 
</do>

 

  <t:script init="true">
    var APPLICABLE_TEST = null; // for testing

    $negotiation = $disco.getInteraction().getSystem().getNegotiation();
    $ambiance = Packages.fr.limsi.negotiate.restaurant.Ambiance.class ;
    $cuisine = Packages.fr.limsi.negotiate.restaurant.Cuisine.class ;
    $lastProposal = null;

	function lastOpenProposal(){
	
		return $lastProposal;
	}
	
	function updateProposal(proposal){
		$lastProposal = proposal;
	}
	
	function getLastUserStatement(){
		return $negotiation.getLastUserStatment();
	}
	
	function getPreference(criterion){
		return ($negotiation.getCriterionNegotiation(criterion).getPreference());
	}
     
  </t:script>
  
</model>
